@{
    ViewData["Title"] = "Dish Statistics";
}

<style>
    .stats-title {
        text-align: center;
        font-family: 'Amatic SC', cursive;
        font-size: 3rem;
        margin-top: 2rem;
        margin-bottom: 1.5rem;
        color: #4b2c1c;
    }

    .stats-controls {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
        flex-wrap: wrap;
    }

    .charts-row {
        display: flex;
        justify-content: center;
        gap: 2rem;
        flex-wrap: wrap;
        padding: 0 2rem 3rem;
    }

    .chart-box {
        flex: 1 1 300px;
        min-width: 280px;
        max-width: 400px;
        height: 300px;
        background-color: #fff;
        border-radius: 12px;
        padding: 1rem;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
</style>

<h2 class="stats-title">Top 5 Most Popular Dishes</h2>

<div class="stats-controls">
    <div class="d-flex align-items-center">
        <label for="selectedDate">Select Date:</label>
        <input type="date" id="selectedDate" class="form-control" />
    </div>

    <div class="d-flex gap-2">
        <button class="btn btn-primary" onclick="loadStats()">Load Stats</button>
        <button class="btn btn-secondary" onclick="downloadPDF()">Export PDF</button>
        <a asp-action="DishStats" class="btn btn-secondary">Dish-wise Statistics</a>
    </div>
</div>
<div class="charts-row" id="chartContainer">
    <div class="chart-box"><div id="likes_chart" style="width: 100%; height: 100%;"></div></div>
    <div class="chart-box"><div id="comments_chart" style="width: 100%; height: 100%;"></div></div>
    <div class="chart-box"><div id="ratings_chart" style="width: 100%; height: 100%;"></div></div>
</div>

@section Scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script>
        google.charts.load("current", { packages: ["corechart"] });

        async function loadStats() {
            const date = document.getElementById("selectedDate").value;
            const params = new URLSearchParams();

            if (date) {
                const endDate = new Date(date);
                endDate.setHours(23, 59, 59, 999);
                params.append("endDate", endDate.toISOString());
            }

            const response = await fetch(`/Statistics/PopularDishes?${params.toString()}`);
            const data = await response.json();

            drawLikesChart(data);
            drawCommentsChart(data);
            drawRatingsChart(data);
        }

        function drawLikesChart(stats) {
            const chartData = [["Dish", "Likes"]];
            stats.sort((a, b) => b.likes - a.likes).slice(0, 5).forEach(item =>
                chartData.push([item.dishName, item.likes])
            );
            const data = google.visualization.arrayToDataTable(chartData);
            const options = {
                colors: ['#e74c3c'],
                vAxis: { title: "Likes" },
                hAxis: { title: "Dish Name" }
            };
            new google.visualization.ColumnChart(document.getElementById("likes_chart")).draw(data, options);
        }

        function drawCommentsChart(stats) {
            const chartData = [["Dish", "Comments"]];
            stats.sort((a, b) => b.comments - a.comments).slice(0, 5).forEach(item =>
                chartData.push([item.dishName, item.comments])
            );
            const data = google.visualization.arrayToDataTable(chartData);
            const options = {
                colors: ['#3498db'],
                vAxis: { title: "Comments" },
                hAxis: { title: "Dish Name" }
            };
            new google.visualization.ColumnChart(document.getElementById("comments_chart")).draw(data, options);
        }

        function drawRatingsChart(stats) {
            const chartData = [["Dish", "Avg Rating"]];
            stats.sort((a, b) => b.averageRating - a.averageRating).slice(0, 5).forEach(item =>
                chartData.push([item.dishName, item.averageRating])
            );
            const data = google.visualization.arrayToDataTable(chartData);
            const options = {
                colors: ['#f1c40f'],
                vAxis: { title: "Rating" },
                hAxis: { title: "Dish Name" }
            };
            new google.visualization.ColumnChart(document.getElementById("ratings_chart")).draw(data, options);
        }

        async function downloadPDF() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF('portrait');

            const selectedDate = document.getElementById("selectedDate").value;
            const title = `Top 5 Most Popular Dishes`;
            const subtitle = selectedDate ? `Statistics up to ${new Date(selectedDate).toLocaleDateString()}` : "Full statistics";

            doc.setFont("helvetica", "bold");
            doc.setFontSize(22);
            doc.text(title, doc.internal.pageSize.getWidth() / 2, 20, { align: "center" });

            doc.setFont("helvetica", "normal");
            doc.setFontSize(14);
            doc.text(subtitle, doc.internal.pageSize.getWidth() / 2, 30, { align: "center" });

            const chartContainer = document.getElementById("chartContainer");
            const canvas = await html2canvas(chartContainer);
            const imgData = canvas.toDataURL("image/png");

            const imgWidth = 180;
            const imgHeight = imgWidth * (canvas.height / canvas.width);

            doc.addImage(imgData, 'PNG', (doc.internal.pageSize.getWidth() - imgWidth) / 2, 40, imgWidth, imgHeight);
            doc.save("popular-dishes-statistics.pdf");
        }

        google.charts.setOnLoadCallback(loadStats);
    </script>
}
