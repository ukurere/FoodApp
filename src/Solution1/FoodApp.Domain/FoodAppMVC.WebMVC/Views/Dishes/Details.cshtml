@model Dish
@{
    ViewData["Title"] = Model.Name;
    var imageName = Model.Name.ToLower().Replace(" ", "") + ".jpg";
    var isFavorite = ViewBag.IsFavorite as bool? ?? false;
    var comments = ViewBag.Comments as List<CommentWithRatingViewModel> ?? new();
    var proteins = (double)(ViewBag.Proteins ?? 0.0);
    var fats = (double)(ViewBag.Fats ?? 0.0);
    var carbs = (double)(ViewBag.Carbohydrates ?? 0.0);
    var calories = (double)(ViewBag.Calories ?? 0.0);
    var userId = ViewBag.UserId as string ?? "";
}

<link rel="stylesheet" href="~/css/dish-details.css" asp-append-version="true" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="dish-wrapper">
    <div class="dish-title-row">
        <button class="heart-button" data-dish-id="@Model.DishId" onclick="toggleFavorite(this)">
            <img src="~/images/@(isFavorite ? "heart-filled.png" : "heart-outline.png")" alt="Favorite" class="heart-icon" />
        </button>
        <h1 class="dish-title">@Model.Name</h1>
        <button class="pdf-button" onclick="window.location.href='/Dishes/ExportToPdf/@Model.DishId'">
            <img src="~/images/PDF.jpg" alt="PDF" class="pdf-icon" />
        </button>
    </div>

    <div class="dish-main-container">
        <div class="dish-photo-section">
            <img src="~/images/@imageName" alt="@Model.Name" class="dish-photo" />
        </div>
        <div class="dish-info-section">
            <div class="dish-meta">
                <span><strong>Type:</strong> @Model.Type</span>
                <span><strong>Time:</strong> @Model.PreparationTimeMinutes min</span>
            </div>
            <hr class="dish-divider" />

            <div class="dish-info-columns">
                <div class="dish-column">
                    <h4>Ingredients</h4>
                    <ul>
                        @foreach (var di in Model.DishIngredients)
                        {
                            <li>
                                @if (di.Quantity > 0)
                                {
                                    @($"{di.Quantity} {di.CntIngredient} {di.Ingredient.Name}")
                                }
                                else
                                {
                                    @di.Ingredient.Name
                                }
                            </li>
                        }
                    </ul>
                </div>

                <div class="dish-column">
                    <h4>Nutrition</h4>
                    <ul>
                        <li>Proteins: @proteins g</li>
                        <li>Fats: @fats g</li>
                        <li>Carbs: @carbs g</li>
                        <li><strong>Total:</strong> @calories kcal</li>
                    </ul>
                </div>

                <div class="dish-column chart-container">
                    <canvas id="nutrientChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="dish-recipe-section">
        <h3 class="centered-title">Recipe</h3>
        <p class="centered-text">@Model.Recipe</p>
    </div>

    <div class="dish-comments-section">
        <div class="comments-header">
            <h3 class="centered-title">Comments</h3>
            <a class="add-comment-link" href="/Comments/Create?dishId=@Model.DishId">Add Comment</a>
        </div>

        <div class="comments-carousel-scrollable">
            @foreach (var comment in comments)
            {
                <div class="comment-item">
                    <div class="comment-text">@comment.Text</div>
                    <div class="comment-meta">Rating: @comment.RatingValue</div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function toggleFavorite(button) {
            const dishId = button.getAttribute('data-dish-id');
            const icon = button.querySelector('img');
            const isFilled = icon.src.includes("heart-filled.png");

            const response = await fetch(`/Dishes/ToggleFavorite/${dishId}`, { method: 'POST' });

            if (response.ok) {
                icon.src = isFilled ? '/images/heart-outline.png' : '/images/heart-filled.png';
            } else {
                alert("Error updating favorites.");
            }
        }

        const ctx = document.getElementById('nutrientChart').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Proteins', 'Fats', 'Carbs'],
                datasets: [{
                    data: [@proteins, @fats, @carbs],
                    backgroundColor: ['#7180AC', '#F4D58D', '#D7263D'],
                    borderWidth: 1
                }]
            },
            options: {
                cutout: '60%',
                plugins: { legend: { display: false } }
            }
        });
    </script>
}
